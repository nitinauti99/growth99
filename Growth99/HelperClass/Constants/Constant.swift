//
//  Constant.swift
//  Growth99
//
//  Created by nitin auti on 03/11/22.
//

import Foundation

struct Constant {
    struct ErrorMessage {
        static let emailEmptyError = "Email is required"
        static let emailInvalidError = "Email is Invalid"
        static let passwordEmptyError = "Password is Required"
        static let passwordInvalidError = "Password is Invalid"
        static let passwordMissmatchError = "Confirm password should be same as password"
        static let genderEmptyError = "Gender is required"
        static let genderInvalidError = "Gender is Invalid"
        static let ammountInvalidError = "ammount is Invalid"
        static let ammountEmptyError = "ammount is Required"
        static let repeatPasswordEmptyError = "Repeat password is Required."
        static let repeatPasswordInvalidError = "Repeat password is Invalid."
        static let nameEmptyError = "Name is required."
        static let nameInvalidError = "Name is Invalid."
        static let subDomainNameEmptyError = "SubDomain Name is required."
        static let refundPercentageEmptyError = "Refund Percentage is required."
        static let firstNameEmptyError = "First Name is required."
        static let hashTagEmptyError = "Hashtag is required."
        static let hashTagInvalidError = "Hashtag is invalid."
        static let chatQuestionnaireNameEmptyError = "Chat Questionnaire Name is required."
        static let chatQuestionnaireURLInvalidError = "Reference link is invalid (should start with http)"
        static let firstNameInvalidError = "First Name is Invalid."
        static let lastNameInvalidError = "Last Name is Invalid."
        static let invalidURLError = "Please enter the URL in correct format"
        static let emptyURLError = "Please fill the above field with valid URL"
        static let lastNameEmptyError = "Last Name is required."
        static let userFiledEmptyError = "Please select user"
        static let statusFiledEmptyError = "Please select status"
        
        static let phoneNumberEmptyError = "Phone number is required."
        static let phoneNumberInvalidError = "Phone number is Invalid"
        static let businessnameEmptyError = "Business name is required."
        static let confirmPasswordEmptyError = "Confirm password is Required."
        static let ConfirmPasswordInvalidError = "Confirm password is Invalid."
        static let PasswordMissmatchError = "Password must match."
        static let ConfirmationCodeInvalidError = "ConfirmationCode is Required."
        static let oldPasswordEmptyError = "Old Password is required."
        static let termsConditionsUrl = "https://growth99.com/terms-and-conditions/"
        static let privacyPolicyUrl = "https://growth99.com/privacy-policy/"
        static let privacyText = "I agree to Growth99 Terms & Conditions and Privacy Policy"
    }
    
    /// Required  Server status from requests url configured for what ever is needed
    struct status {
        static let OK = "OK"
        static let NOK = "NOK"
        static let REQUEST_FAIL = "FAIL"
        static let NETWORK_UNAVAILABLE = "NETWORK_UNAVAILABLE"
        static let RESOURCE_UNAVAILABLE = "RESOURCE_UNAVAILABLE"
    }
    
    struct SideMenu {
        static let logout = "Logout"
        static let helpTraining = "Help and Training"
        static let contactSupport = "Contact Support"
    }
    
    struct Profile {
        static let socialMediaManager = "Social Media Manager"
        static let chatbot = "Chatbot"
        static let websiteTemplatesList = "Website Templates"
        static let announcements = "Announcements"
        static let landingPages = "Landing Pages"
        static let appointment = "Add Appointment"
        static let editAppointment = "Edit Appointment"
        static let Calendar = "Calendar"
        static let postCalendar = "Post Calendar"
        static let socialProfiles = "Social Profiles"
        static let postLabel = "Post Label"
        static let postLibrary = "Post Library"
        static let MediaLibrary = "Media Library"
        static let clinics = "Clinics"
        static let createClinic = "Create Clinic"
        static let editClinic = "Edit Clinic"
        static let createService = "Create Service"
        static let categories = "Categories"
        static let addCategories = "Create Category"
        static let creatNotification = "Create Notification"
        static let editCategories = "Edit Category"
        static let editService = "Edit Service"
        static let services = "Services"
        static let users = "Users"
        static let leadHistroy = "Lead Data"
        static let questionnaire = "Questionnaire"
        static let questionnaireDetails = "View Questionnaire"
        static let unansweredQuestionList = "Unanswered Question List"
        static let pateint = "Patients"
        static let createLead = "Create Lead"
        static let editLead = "Edit Lead"
        static let createPatient = "Create Patient"
        static let editPatient = "Edit Patient"
        static let business = "Business"
        static let patientDetail = "Patient Detail"
        static let leadDetail = "Lead Detail"
        static let chatConfiguration = "Chat Configuration"
        static let chatCustomization = "Chat Customization"
        static let scrapeWebsite = "Scrape Website"
        static let chatQuestionnaires = "Chat Questionnaires"
        static let chatBotTemplate = "ChatBot Template"
        static let leadTimeLine = "Lead TimeLine"
        static let leadTask = "Tasks"
        static let leadHistory = "History"
        static let leadCombinedTimeLine = "Combined Timeline"
        static let designer = "Designer"
        static let notification = "Notification"
        static let submission = "Submission"
        static let notificationList = "Notification Setting"
        static let emailTemplatesList = "Email Templates List"
        static let FormsList = "Forms"
        static let createForm = "Create Form"
        static let createTrigger = "Create Trigger"
        static let editTrigger = "Edit Trigger"
        static let smsTemplateList = "SMS Templates List"
        static let createSMSTemplate = "Create SMS Template"
        static let editSMSTemplate =  "Edit SMS Template"
        static let consentsTemplatesList = "Consents"
        static let chatSessionList = "Chat Session List"
        static let leadTemplates = "Lead Templates"
        static let appointmentTemplates = "Appointment Templates"
        static let eventTemplates = "Event Templates"
        static let massEmailTemplates = "Mass Email Templates"
        static let massSMSTemplates = "Mass SMS Templates"
        static let Questionnarie = "Questionnaire"
        static let tasks = "Tasks"
        static let createTasks = "Create Task"
        static let personalization = "Personalization"
        static let subdomain = "Subdomain"
        static let refundPolicy = "Refund Policy"
        static let trackingCode = "Tracking code"
        static let dataStudio = "Data Studio"
        static let paidMedia = "Paid Media"
        static let syndicationReport = "Syndication Report"
        static let emailSMSAudit = "Email/SMS Audit"
        static let Consents = "Consents"
        static let AssignConsent = "Assign Consent"
        static let appointmentDetail = "Appointments"
        static let timeLineDetail = "TimeLine"
        static let deleteConcents = "Delete Consent"
        static let tasksDetail = "Tasks Detail"
        static let patientTags = "Patient Tags"
        static let leadTags = "Lead Tags"
        static let leadSourceURLs = "Lead Source URLs"
        static let createPatientTags = "Add Patient Tag"
        static let addLeadTags = "Add Lead Tag"
        static let  editLeadTags = "Edit Lead Tag"
        static let addPostLabel = "Add Post Label"
        static let editPatientTags = "Edit Patient Tag"
        static let editPostLabel = "Edit Post Label"
        static let addLeadSourceURL = "Add Lead Source URL"
        static let editLeadSourceURL = "Edit Lead Source URL"
        static let Timeline = "Timeline"
        static let appointmentTrigger = "Appointment"
        static let leads = "leads"
        static let massEmailSMS = "Mass Email and SMS"
        static let createMassEmailSMS = "Create Mass Email or SMS"
        static let massEmail = "Mass Email"
        static let massSMS = "Mass SMS"
        static let searchList = "Search..."
        static let homeScreen = "Home"
        static let triggerActive = "ACTIVE"
        static let createUser = "Create User"
        static let triggers = "Triggers"
        static let twoWayText = "Two Way Text"
        static let formBuilder = "Form Builder"
        static let leadTriggers = "Lead Triggers"
        static let triggersList = "Triggers List"
        static let appointmentTriggers = "Appointment Triggers"
        static let moreEvents = "More Events"
        static let bookingHistory = "Booking History"
        static let CalendarAccessDenied = "Access denied"
        static let unexpectedError = "Unexpected Error"
        static let CalendarDefault = "Default"
        static let CalendarNotDefault = "Notdefault"
        static let vacationTitle = "Vacation Schedule"
        static let workingScheduleTitle = "Working Schedule"
        static let changePasswordTitle = "Change Password"
        static let workingSchedule = "working"
        static let selectDay = "Select day"
        static let days = "days"
        static let businessProfile = "Business Profile"
        static let tableViewEmptyText = "There is no data to show."
        static let chooseFromTime = "Please choose from time"
        static let chooseToTime = "Please choose the time"
        static let chooseFromDate = "Please choose from date"
        static let chooseToDate = "Please choose the date"
        static let addCategorie = "Category saved successfully"
        static let workingScheduleUpdate = "Working schedule updated successfully"
        static let vacationScheduleUpdate = "Vacation schedule updated successfully"
        static let clinicsRequired = "Clinics are required."
        static let categoryNameRequired = "Category Name is required."
        static let leadListTitle = "Lead Dashboard"
        static let deletedLeadListTitle = "Deleted Leads"
        static let editMediaLibrary = "Edit Image"
        static let createMediaLibrary = "Add Image"
        static let all = "All"
        static let unread = "Unread"
    }
    
    struct Regex {
        static let email = "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$"
        static let password = "^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[@$!])[a-zA-Z0-9@$!]{8,}$"
        static let phone = "^[1-9][0-9]{9}$"
        static let nameWithoutSpace = "^[a-zA-Z]*$"
        static let nameWithSpace = "^[a-zA-Z]([a-zA-Z ]*)?$"
        static let nameWithNumbers = "^[a-zA-Z]([a-zA-Z0-9 ]*)?$"
        static let number = "[1-9][0-9]*"
        static let hashTag = "/^(#[a-zA-Z0-9]+,? *)*#[a-zA-Z0-9]+$/"
        static let urlValidation = "^((https|http)://)(www\\.)?([-a-z0-9]{1,63}\\.)*?[a-z0-9][-a-z0-9]{0,61}[a-z0-9]\\.[a-z]{2,6}(/[-\\w@\\+\\.~#\\?&/=%]*)?$"
        static let specialCharacterWithoutSpace = "^[^\n ]*$"
        static let DateValidationDateMounthYear = "^(0?[1-9]|[12][0-9]|3[01])[-/](0?[1-9]|1[012])[-/]((?:19|20|21)[0-9][0-9])$"
        static let DateValidationMounthDateYear = "^(0?[1-9]|1[012])[-/](0?[1-9]|[12][0-9]|3[01])[-/]((?:19|20|21)[0-9][0-9])$"
        static let DateValidationYearMounthDate = "^((?:19|20|21)[0-9][0-9])[-/](0?[1-9]|1[012])[-/](0?[1-9]|[12][0-9]|3[01])$"

    }
    
    struct ViewIdentifier {
        static let dropDownCustomTableViewCell = "DropDownCustomTableViewCell"
        static let vacationsHeadeView = "VacationsHeadeView"
        static let vacationsCustomTableViewCell = "VacationsCustomTableViewCell"
        static let workingCustomTableViewCell = "WorkingCustomTableViewCell"
        static let dailyViewController = "DailyViewController"
        static let addEventViewController = "AddEventViewController"
        static let eventsTableViewCell = "EventsTableViewCell"
        static let emptyEventsTableViewCell = "EmptyEventsTableViewCell"
        static let CalendarViewController = "CalendarViewController"
        static let massEmailandSMSDetailVC = "MassEmailandSMSDetailViewController"
    }
    
    enum EventTypeSelected: String {
        case upcoming
        case past
        case all
    }
}
